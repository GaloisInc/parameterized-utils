name: Build, test, and document
on:
  - push
  - pull_request
jobs:
  test:
    name: Testing ${{ matrix.os }} GHC-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        os: [ubuntu-24.04]
        # See doc/dev.md for GHC version support policy
        ghc: [9.10.1, 9.8.1, 9.6.1, 9.4.5, 9.2.2, 9.0.2, 8.10.7, 8.8.4, 8.6.5]
        allow-failure: [false]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/setup@v2
        id: setup-haskell
        with:
          ghc-version: ${{ matrix.ghc }}
      - name: Install Nix
        uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-21.11
          install_url: https://releases.nixos.org/nix/nix-2.11.0/install
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: actions/cache/restore@v4
        name: Restore cabal store cache
        id: cache
        env:
          # NB: Each `matrix.os` (e.g., `ubuntu-22.04-arm`) uniquely determines
          # a `runner.arch` (e.g., ARM64), so there is no need to include the
          # latter as part of the cache key
          #
          # Any changes to this key should be reflected in the `doc` job below.
          key: cabal-${{ matrix.os }}-ghc${{ matrix.ghc }}
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: |
            ${{ env.key }}-${{ github.ref }}
          restore-keys: |
            ${{ env.key }}-
      - name: Cabal update
        shell: bash
        run: cabal update
      - name: Setup Environment Vars
        # Setup a nix shell environment command that will supply the
        # appropriate GHC version
        run: |
          GHC=haskell.compiler.ghc$(echo ${{ matrix.ghc }} | sed -e s,\\.,,g)
          echo GHC=$GHC >> $GITHUB_ENV
          case ${{ matrix.ghc }} in
            8.6.5) GHC_NIXPKGS=github:nixos/nixpkgs/20.09 ;;
            9.0.2) GHC_NIXPKGS=github:nixos/nixpkgs/nixos-22.05 ;;
            9.2.2) GHC_NIXPKGS=github:nixos/nixpkgs/nixos-22.05 ;;
            9.4.5) GHC_NIXPKGS=github:nixos/nixpkgs/nixos-23.05 ;;
            9.6.1) GHC_NIXPKGS=github:nixos/nixpkgs/nixos-23.05 ;;
            9.8.1) GHC_NIXPKGS=github:nixos/nixpkgs/nixos-23.11 ;;
            9.10.1) GHC_NIXPKGS=github:nixos/nixpkgs/nixos-24.05 ;;
            *)     GHC_NIXPKGS=github:nixos/nixpkgs/21.11 ;;
          esac
          echo NS="nix shell ${GHC_NIXPKGS}#${GHC}" >> $GITHUB_ENV
      - name: Package's Cabal/GHC compatibility
        shell: bash
        # Using setup will use the cabal library installed with GHC
        # instead of the cabal library of the Cabal-install tool to
        # verify the cabal file is compatible with the associated
        # GHC cabal library version.  Cannot run "configure" or "build",
        # because dependencies aren't present, but a "clean" is
        # sufficient to cause parsing/validation of the cabal file.
        run: |
          defsetup()  { echo import Distribution.Simple; echo main = defaultMain; }
          setup_src() { if [ ! -f Setup.hs ] ; then defsetup > DefSetup.hs; fi; ls *Setup.hs; }
          setup_bin() { echo setup.${{ matrix.ghc }}; }
          with_ghc()  { $NS -c ${@}; }
          echo "github.com=${{ secrets.GITHUB_TOKEN }}" >> nix.conf
          with_ghc ghc -o $(setup_bin) $(setup_src) && ./$(setup_bin) clean
      - name: Cabal check
        shell: bash
        run: cabal check
      - name: Configure
        shell: bash
        # See doc/dev.md for development practices around warnings.
        run: cabal configure --enable-tests --ghc-options='-Werror=compat -Werror=default'
      - name: Build
        shell: bash
        run: cabal build
      - name: Test
        shell: bash
        run: cabal test
      - uses: actions/cache/save@v4
        name: Save cabal store cache
        if: always()
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: ${{ steps.cache.outputs.cache-primary-key }}

  doc:
    name: Publish haddocks to GitHub Pages
    needs: test
    env:
      ghc: "9.10.1"
      os: "ubuntu-24.04"
    # For some reason, can't use ${{ env.os }} here, so just be sure to keep
    # this in sync with the line above.
    runs-on: "ubuntu-24.04"
    concurrency:
      # Only run one of these at a time because they update the global pages.
      group: haddock
      cancel-in-progress: false
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/setup@v2
        id: setup-haskell
        with:
          ghc-version: ${{ env.ghc }}
      # Note that this uses (but does not modify) the cache from the `test`
      # step. They use all the same dependencies, so this is appropriate.
      - uses: actions/cache/restore@v4
        name: Restore Cabal cache
        env:
          key: cabal-${{ env.os }}-ghc${{ env.ghc }}
        with:
          path: |
            ${{ steps.setup-haskell.outputs.cabal-store }}
            dist-newstyle
          key: |
            ${{ env.key }}-${{ github.ref }}
          restore-keys: |
            ${{ env.key }}-
      - name: Build haddocks
        run: cabal haddock --haddock-output-dir=doc
        shell: bash
      - name: Upload artifact with haddocks to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/master' &&
            github.event.pull_request.head.repo.fork == false &&
            github.repository_owner == 'GaloisInc'
        with:
          path: doc/parameterized-utils
      - name: Deploy haddocks to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        if: github.ref == 'refs/heads/master' &&
            github.event.pull_request.head.repo.fork == false &&
            github.repository_owner == 'GaloisInc'
